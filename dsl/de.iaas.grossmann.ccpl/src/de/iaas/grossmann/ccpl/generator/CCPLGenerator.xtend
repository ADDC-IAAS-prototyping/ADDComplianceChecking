/*
 * generated by Xtext 2.12.0
 */
package de.iaas.grossmann.ccpl.generator

import de.iaas.grossmann.ccpl.cCPL.ConstraintTemplate
import de.iaas.grossmann.ccpl.generator.compiler.AbstractCompiler
import de.iaas.grossmann.ccpl.generator.compiler.EventDefinitionCompiler
import java.util.ArrayList
import java.util.List
import java.util.stream.Collectors
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import de.iaas.grossmann.ccpl.generator.compiler.EventValidationCompiler

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class CCPLGenerator extends AbstractGenerator {

	private List<AbstractCompiler> compilers;

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		var pattern = resource.allContents.filter(ConstraintTemplate).findFirst[true]
		
		compilers = new ArrayList<AbstractCompiler>();
		compilers.addAll(new EventDefinitionCompiler(resource)
			,new EventValidationCompiler(resource)
		);
		
		var content = compilers.stream.map[compile].collect(Collectors.joining);
		
		fsa.generateFile(pattern.patternName + ".epl", content);
	}
	
}
