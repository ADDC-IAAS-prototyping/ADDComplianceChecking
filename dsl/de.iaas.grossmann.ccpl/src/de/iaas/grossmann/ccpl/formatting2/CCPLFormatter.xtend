/*
 * generated by Xtext 2.12.0
 */
package de.iaas.grossmann.ccpl.formatting2

import com.google.inject.Inject
import de.iaas.grossmann.ccpl.cCPL.ComponentEvent
import de.iaas.grossmann.ccpl.services.CCPLGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class CCPLFormatter extends AbstractFormatter2 {
	
	@Inject extension CCPLGrammarAccess

//	def dispatch void format(extension IFormattableDocument document) {
//		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
//		patternName.getNodeEvent.format;
//		for (Statement statement : patternName.getStatements()) {
//			statement.format;
//		}
//	}

	def dispatch void format(ComponentEvent standardEvent, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		standardEvent.event.format;
	}
	
	// TODO: implement for Statement, Invariant, SequenceStatement, SequenceVariable, Context, ContextEvent, EventConstraint, EventDefinition, EventField, OrExpression, AndExpression, NotExpression, CompareExpression, MathExpression
}
