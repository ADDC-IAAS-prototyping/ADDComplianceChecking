/*
 * generated by Xtext 2.12.0
 */
package de.iaas.grossmann.ccpl.tests

import com.google.inject.Inject
import de.iaas.grossmann.ccpl.cCPL.ConstraintTemplate
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith

@RunWith(XtextRunner)
@InjectWith(CCPLInjectorProvider)
class CCPLParsingTest {
	@Inject
	ParseHelper<ConstraintTemplate> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			pattern MyPattern:
			
			use NodeEvent (memory double, cpu double);
			
			context x=NodeEvent:
			def: MyEvent(val double): (x.cpu < x.memory * 2) and 2 or 3 + 2;
		''')
		Assert.assertNotNull(result)
		Assert.assertTrue(result.eResource.errors.isEmpty)
	}
}
